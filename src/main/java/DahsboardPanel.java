
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class DahsboardPanel extends javax.swing.JPanel {

    /**
     * Creates new form GuestPanel
     */
    public DahsboardPanel() {
        initComponents();
        loadTableData();
        notFoundPanel.setVisible(false);
    }

    DahsboardPanel(JScrollPane contentScrollPane) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        cariTextField = new javax.swing.JTextField();
        cariButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mahasiswaTable = new javax.swing.JTable();
        notFoundPanel = new javax.swing.JPanel();
        notFoundLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Dashboard");
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(cariTextField);

        cariButton.setText("Cari");
        cariButton.setMaximumSize(new java.awt.Dimension(51, 26));
        cariButton.setMinimumSize(new java.awt.Dimension(51, 26));
        cariButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariButtonActionPerformed(evt);
            }
        });
        jPanel3.add(cariButton);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        mahasiswaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIM", "Nama", "Jenis Kelamin", "Provinsi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mahasiswaTable.getTableHeader().setReorderingAllowed(false);
        mahasiswaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mahasiswaTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(mahasiswaTable);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        notFoundPanel.setBackground(new java.awt.Color(255, 204, 204));
        notFoundPanel.setForeground(new java.awt.Color(255, 102, 102));
        notFoundPanel.setLayout(new javax.swing.BoxLayout(notFoundPanel, javax.swing.BoxLayout.LINE_AXIS));

        notFoundLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        notFoundLabel.setForeground(new java.awt.Color(204, 0, 0));
        notFoundLabel.setText("not found");
        notFoundPanel.add(notFoundLabel);

        jPanel2.add(notFoundPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1AncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorMoved

    private void cariButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariButtonActionPerformed
        // TODO add your handling code here:
        final String ERROR_NOT_FOUND = "Nim tidak ditemukan\n.";

        Database dataMhs = Database.getInstance();
        Mahasiswa mhs = null;
        String nimCari = cariTextField.getText();
        DefaultTableModel dtm = (DefaultTableModel) mahasiswaTable.getModel();
        if (nimCari.equals("")) {
            notFoundPanel.setVisible(true);
            notFoundLabel.setText(nimCari.concat("Harap masukkan nim"));
            loadTableData();
        } else {
            mhs = dataMhs.getMahasiswa(nimCari);
            if (mhs != null) {
                while (dtm.getRowCount() > 0) {
                    dtm.removeRow(0);
                }
                dtm.addRow(new Object[]{
                    mhs.getNim(),
                    mhs.getName(),
                    mhs.getJk(),
                    mhs.getProv()});
                notFoundPanel.setVisible(false);
            } else {
                notFoundPanel.setVisible(true);
                notFoundLabel.setText(nimCari.concat(" tidak ditemukan"));
                loadTableData();
            }
        }
    }//GEN-LAST:event_cariButtonActionPerformed

    private void loadTableData() {
        DefaultTableModel dtm = (DefaultTableModel) mahasiswaTable.getModel();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        try {
            for (Mahasiswa mhs : Database.getInstance().getListMahasiswa()) {
                dtm.addRow(new Object[]{
                    mhs.getNim(),
                    mhs.getName(),
                    mhs.getJk(),
                    mhs.getProv()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(DahsboardPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void mahasiswaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mahasiswaTableMouseClicked

    }//GEN-LAST:event_mahasiswaTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cariButton;
    private javax.swing.JTextField cariTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable mahasiswaTable;
    private javax.swing.JLabel notFoundLabel;
    private javax.swing.JPanel notFoundPanel;
    // End of variables declaration//GEN-END:variables
}
